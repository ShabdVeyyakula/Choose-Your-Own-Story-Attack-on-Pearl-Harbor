import 'package:attack_on_pearl_harbor/choose_your_character.dart';
import 'package:flutter/material.dart';
import 'package:flutter_tindercard/flutter_tindercard.dart';
import 'instructuins.dart';
import 'background.dart';
import 'citations.dart';


void main() => runApp(MaterialApp(home: (MyApp())));

class MyApp extends StatelessWidget {
  // This widget is the root of your application.
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      theme: ThemeData(fontFamily: 'Simonetta', canvasColor: Colors.brown[900]),
      //home: Game(),
      routes: {
        '/': (ctx) => ChooseYourCharacter(),
        Instruction.routeName: (ctx) => Instruction(),
        Background.routeName: (ctx) => Background(),
      },
    );
  }
}
//Navigator.pushNamed(context, Instruction.routeName);

class Game extends StatefulWidget {
  @override
  _GameState createState() => _GameState();
}

class _GameState extends State<Game> {
  var uiManagementInstance = UIManagement();

 

  static List networkImages = [
    'https://www.history.com/.image/c_fit%2Ccs_srgb%2Cfl_progressive%2Cq_auto:good%2Cw_620/MTYwMjM1MDg4ODU5Mzc1NTI4/16-pearl-harbor-photo-gallery-getty-3233232.jpg',
    'https://www.historyonthenet.com/wp-content/uploads/2017/09/USS-Arizona-Sinking-Pearl-Harbor-Newspaper-December-7-1941-AP-Getty-640x480.jpg',
    'https://cdn.britannica.com/96/192896-131-ECCA4FB7/Explosion-USS-Shaw-magazine-attack-Pearl-Harbor-Dec-7-1941.jpg',
    'https://images05.military.com/sites/default/files/styles/full/public/media/news/conflicts/2012/12/pearl-harbor-attack-600x400.jpg?itok=Onk8bhXG'
    'https://images05.military.com/sites/default/files/styles/full/public/media/news/conflicts/2012/12/pearl-harbor-attack-600x400.jpg?itok=Onk8bhXG'
    'https://images05.military.com/sites/default/files/styles/full/public/media/news/conflicts/2012/12/pearl-harbor-attack-600x400.jpg?itok=Onk8bhXG'
    'https://images05.military.com/sites/default/files/styles/full/public/media/news/conflicts/2012/12/pearl-harbor-attack-600x400.jpg?itok=Onk8bhXG'
    'https://images05.military.com/sites/default/files/styles/full/public/media/news/conflicts/2012/12/pearl-harbor-attack-600x400.jpg?itok=Onk8bhXG'
            

  ];

 

  static List questionPath1 = [
    "You are apart of Admiral Isoruko Yamamto's top secret plan.  He worries that America has the power to stop Japan's Expansion.  His plan is to plan a swift attack on the U.S Navel fleet so that America would be unable to join the war.  This way Japan can expand on theit own will(Yes: Continue, No: Quit)",
    "You are a Pilot of the Japanese Air Force, it is the Summer of 1941 and you begin your training.  Bomber pilots learn how to drop Bombs and torpedo pilots fly very low to the ground.  Its Time to Attack.  The first wave is to attack every battle ship in sight and the second wave is to attack whatever is left.(Yes: Attack in the First Wave, No: Attack in the Second Wave",
    "It is December 7 and the attack will begin at 6:00 AM.  You are Hopewful that the attack will go succsfully and you honor your Country.  You are aboard tge Aircraft Carries waiting for approval.  The ship rocks back and forth holding 180 japenese flights.  Comander Mitsu Fuchida is leading the air attack and fires a flare signaling to line up into attack formation.  You take off and you are on your way to Pearl Harbor(Swipe Yes)",
    "It is 7:51 and you here the signal that the Americans have been cought by Surprise.  You are at advantage.  You see the buildings.(Yes: Fly to Hickam Field, No: Fly to the Harbor)",
    "You arrive at Hickam Field, this is the southern edge of the Harbor.  Many planes are lined up and ready for you to destroy.  You fly low and you have a good chance of destroying your targets.  Suddenly your vision of the bombs are ubstructed by a cloud of black smoke(Yes: Drop Your Bomb and hope it hits the target, No: Pull Out and try again)",
    "You drop your bomb blindely and hope it lands.  You clear out of the smoke and you find out yoru attack was sucesfule.  You climb high altiyude and escape back to your aircraft carrier(Well Done You have finished Succesfuly.  Head over to the menue and press event info to learn more!)."
    
    

    
  ];
  static List questionPath2 = [
    "Hope You want to Play Later",
    "Bye(Check Out Information in the Menue)",
    "The Fisrt Wave has completed their attack and now its your turn.  You attack the remaing American Fleet and then you head back.(Yes: Experience the First Wave, If not then Check out Event Info in the Menue!))",
    "Restart and swipe right",
    "You decide to clear out of the smoke and drop the bomb when the target is in sight, you have miscalculated and the American Defenses have shot you down.  You Died.(Go to the menue and press game to restart or Look at Event Info to Learn More!)",
    "You arrive at the harbor.  You look for Aircraft Carriers but you do not find any, instead you see many undefended Battle ships.  You destroy the USS Arizona along with a couple bombers in your fleet.  Your mission is complete and you head back(Well Done, You have succesfully completed your Mission.  Head over to the Event info screen to learn more!)  ",


    
    
  ];
  int length = questionPath1.length + questionPath2.length;

  var info1 = "Sai is dinky";
  var info2 = " Sai is cool";
  var info3 = "FWJ:e";
  var info4 = "lkeflwkjef";
  var info5 = ";lwekf;l";
  var info6 = ";lwekf;";
  var info7 = "wkefjl";

  static List story = [];

  List time = ['December 2, 1941', 'December 3 1941', 'December 7 1941', 'December 7 1941', 'December 7 1941', 'December 7 1941'];

  var index = 0;

  var textVar = "Welcome, Shall we Start";

  var currentTime = "December 1, 1941";

  var startingImage =
      'https://www.history.com/.image/c_fit%2Ccs_srgb%2Cfl_progressive%2Cq_auto:good%2Cw_620/MTYwMjM1MDg4ODU5Mzc1NTI4/16-pearl-harbor-photo-gallery-getty-3233232.jpg';

  @override
  Widget build(BuildContext context) {
    CardController controller; //Use this to trigger swap.

    return Scaffold(
      drawer: uiManagementInstance.drawerWidget(context),
      backgroundColor: Colors.grey[400],
      appBar: AppBar(
        centerTitle: true,
        backgroundColor: Colors.brown.shade900,
        elevation: 0,
        title: Text(
          'Japan',
          style: TextStyle(
            color: Colors.white,
            fontWeight: FontWeight.bold,
          ),
        ),
      ),
      body: Center(
        child: ListView(
        children: <Widget>[
          SizedBox(
            height: 30,
          ),
          Wrap(
            children: <Widget>[
               Center(
                  child: Text(
                    textVar,
                    style: TextStyle(color: Colors.black, fontSize: 20),
                  ),
                ),
              
            ],
          ),
          Container(
              height: MediaQuery.of(context).size.height * 0.6,
              child: new TinderSwapCard(
                  orientation: AmassOrientation.BOTTOM,
                  totalNum: questionPath1.length,
                  swipeEdge: 4.0,
                  maxWidth: MediaQuery.of(context).size.width * 0.9,
                  maxHeight: MediaQuery.of(context).size.width * 0.9,
                  minWidth: MediaQuery.of(context).size.width * 0.8,
                  minHeight: MediaQuery.of(context).size.width * 0.8,
                  cardBuilder: (context, index) => Card(
                        child: Container(
                          decoration: BoxDecoration(
                            image: new DecorationImage(
                              image: NetworkImage(startingImage),
                              fit: BoxFit.fitHeight,
                            ),
                          ),
                          child: Column(
                            children: <Widget>[
                              SizedBox(
                                height: 20,
                              ),
                              Row(
                                mainAxisAlignment:
                                    MainAxisAlignment.spaceEvenly,
                                children: <Widget>[
                                  Text(
                                    'Yes',
                                    style: TextStyle(
                                        color: Colors.white, fontSize: 20),
                                  ),
                                  Text(
                                    'No',
                                    style: TextStyle(
                                        color: Colors.white, fontSize: 20),
                                  )
                                ],
                              ),
                            ],
                          ),
                        ),
                      ),
                  cardController: controller = CardController(),
                  swipeUpdateCallback:
                      (DragUpdateDetails details, Alignment align) {
                    /// Get swiping card's alignment
                  },
                  swipeCompleteCallback:
                      (CardSwipeOrientation orientation, int index) {
                    if (orientation == CardSwipeOrientation.LEFT) {
                      print("LEFT");
                      setState(() {
                        textVar = questionPath1[index];
                        currentTime = time[index];
                        startingImage = networkImages[index];
                      });

                      story.add(info1);

                      
                    } else if (orientation == CardSwipeOrientation.RIGHT) {
                      print("RIGHT");
                      setState(() {
                        textVar = questionPath2[index];
                        currentTime = time[index];
                        startingImage = networkImages[index];

                        story.add(info2);
                      });
                      //Card is RIGHT swiping
                    }

                    /// Get orientation & index of swiped card!
                  })),
          Padding(
            padding: const EdgeInsets.only(top: 80),
            child: Container(
              child: Center(
                child: Column(
                  children: <Widget>[
                    SizedBox(
                      height: 20,
                    ),
                    Text(
                      currentTime,
                      style: TextStyle(
                          color: Colors.white,
                          fontSize: 20,
                          fontWeight: FontWeight.w500),
                    ),
                    SizedBox(
                      height: 5,
                    ),
                  ],
                ),
              ),
              width: MediaQuery.of(context).size.width,
              height: 80,
              decoration: BoxDecoration(
                color: Colors.brown[900],
              ),
            ),
          ),
        ],
      ),
      ),
    );
  }
}

class UIManagement {
  Widget drawerWidget(BuildContext context) {
    return Drawer(
        child: ListView(
      children: <Widget>[
        DrawerHeader(
          child: Column(
            children: <Widget>[
              Text(
                'Attack on Pearl Harbor',
                style: TextStyle(color: Colors.white, fontSize: 20),
              ),
             
              
            ],
          ),
        ),
        ListTile(
          leading: Icon(Icons.games, color: Colors.white),
          onTap: () {
            Navigator.push(
                context, MaterialPageRoute(builder: (context) => Game()));
          },
          title: Text(
            'Game',
            style: TextStyle(color: Colors.white),
          ),
        ),
        GestureDetector(
          child: ListTile(
            leading: Icon(Icons.edit, color: Colors.white),
            onTap: () {
              Navigator.pushNamed(context, Instruction.routeName);
            },
            title: Text(
              'Instructions',
              style: TextStyle(color: Colors.white),
            ),
          ),
        ),
        ListTile(
          leading: Icon(Icons.info_outline, color: Colors.white),
          onTap: () {
            Navigator.pushNamed(context, Background.routeName);
          },
          title: Text(
            'Event Information',
            style: TextStyle(color: Colors.white),
          ),
        ),
        ListTile(
          leading: Icon(Icons.format_quote, color: Colors.white),
          onTap: () {
            Navigator.push(
                context, MaterialPageRoute(builder: (context) => Citations()));
          },
          title: Text(
            'Citations',
            style: TextStyle(color: Colors.white),
          ),
        ),
        
      ],
    ));
  }

}
